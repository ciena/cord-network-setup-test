---
- hosts: 127.0.0.1
  connection: local
  vars:
    fabric_ifaces: "|i40e|"
    #external_iface: "eth2"
    #external_ip: "192.168.1.3/24"
    fabric_ip: "10.6.1.2/24"
    management_ip: "dhcp"
  tasks:
  - name: Establish Interface Lists
    set_fact:
      fabric_iface_list: []
      nonfabric_iface_list: []
    changed_when: false

  - name: Gather Fabric Interfaces
    set_fact:
      fabric_iface_list: "{{ fabric_iface_list + [item] }}"
    with_items:
      - "{{ ansible_interfaces | sort }}"
    when: hostvars[inventory_hostname]['ansible_' + item] is defined and hostvars[inventory_hostname]['ansible_' + item]['module'] is defined and fabric_ifaces.find('|' + hostvars[inventory_hostname]['ansible_' + item]['module'] + '|') != -1 and ( external_iface is not defined or hostvars[inventory_hostname]['ansible_' + item]['device'] != external_iface  )
    changed_when: false

  - name: Gather Non-Fabric Interfaces
    set_fact:
      nonfabric_iface_list: "{{ nonfabric_iface_list + [item] }}"
    with_items:
      - "{{ ansible_interfaces | sort }}"
    when: hostvars[inventory_hostname]['ansible_' + item] is defined and hostvars[inventory_hostname]['ansible_' + item]['module'] is defined and fabric_ifaces.find('|' + hostvars[inventory_hostname]['ansible_' + item]['module'] + '|') == -1 and ( external_iface is not defined or hostvars[inventory_hostname]['ansible_' + item]['device'] != external_iface )
    changed_when: false

  - name: Ensure Fabric
    netfile:
      src: /etc/network/interfaces
      dest: sample.modified
      state: present
      name: fabric
      config: static
      auto: true
      address: "{{ fabric_ip }}"
      bond-mode: active-backup
      bond-miimon: 100
      bond-slaves: none
      force: true
      description: "Leaf - Spine bonded fabric interface"

  - name: Gather Primary Fabric Interface
    set_fact:
      fabric_primary_iface: "{{ fabric_iface_list | sort | first }}"
    changed_when: false

  - name: Ensure Primary Fabric Interface
    netfile:
      src: sample.modified
      dest: sample.modified
      state: present
      auto: true
      name: "{{ fabric_primary_iface }}"
      config: manual
      bond-master: fabric
      bond-primary: "{{ fabric_primary_iface }}"
      force: true
      description: "Primary fabric interface"

  - name: Ensure Fabric Interfaces
    netfile:
      src: sample.modified
      dest: sample.modified
      state: present
      auto: true
      name: "{{ hostvars[inventory_hostname]['ansible_' + item]['device'] }}"
      config: manual
      bond-master: fabric
      force: true
      description: "Fabric interface"
    when: item != fabric_primary_iface
    with_items:
      - "{{ fabric_iface_list | sort }}"

  - name: Ensure Management Bridge DHCP
    netfile:
      src: sample.modified
      dest: sample.modified
      state: present
      name: mgmtbr
      config: "dhcp"
      auto: true
      bridge_ports: "{{ nonfabric_iface_list | join(' ')  }}"
      force: true
      description: "Internal POD management interface"
    when: management_ip is not defined or management_ip == "dhcp"

  - name: Ensure Management Bridge STATIC
    netfile:
      src: sample.modified
      dest: sample.modified
      state: present
      name: mgmtbr
      config: static
      address: "{{ management_ip }}"
      gateway: "{{ management_gw | default(omit) }}"
      broadcast: "{{ management_bc | default(omit) }}"
      bridge_ports: "{{ nonfabric_iface_list | join(' ')  }}"
      force: true
      description: "Internal POD management interface"
    when: management_ip is defined and management_ip != "dhcp"

  - name: Ensure Management Bridge Interfaces
    netfile:
      src: sample.modified
      dest: sample.modified
      state: present
      auto: true
      name: "{{ hostvars[inventory_hostname]['ansible_' + item]['device'] }}"
      config: manual
      force: true
      description: "Management interface"
    with_items:
      - "{{ nonfabric_iface_list | sort }}"

  - name: Ensure External Interface DHCP
    netfile:
      src: sample.modified
      dest: sample.modified
      state: present
      auto: true
      name: "{{ external_iface }}"
      config: dhcp
      force: true
      description: "External interface from POD to Internet (uplink)"
    when: external_iface is defined and ( external_ip is not defined or external_ip == "dhcp" )

  - name: Ensure External Interface STATIC
    netfile:
      src: sample.modified
      dest: sample.modified
      state: present
      auto: false
      name: "{{ external_iface }}"
      config: static
      address: "{{ external_ip }}"
      gateway: "{{ external_gw | default(omit) }}"
      broadcast: "{{ external_bc | default(omit) }}"
      force: true
      description: "External interface from POD to Internet (uplink)"
    when: external_iface is defined and external_ip is defined and external_ip != "dhcp"

